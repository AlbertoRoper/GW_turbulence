"""
dirs.py is a Python routine that contains a function to create a dictionary
between the identifying names of runs in the literature with the corresponding
names of their directories, which should be included in the same directory.
The runs correspond to Pencil Code simulations of gravitational waves
generated by MHD turbulence in the early universe.
"""


# The directories to be read can be stored here by updating the dictionary dirs
# with any new runs that want to be stored
# The runs id can be chosen by the user to identify the run, and the directory name of the run
# has to be given to define the pointer
def read_dirs(proj):

    """
    Function that returns the dictionary of directories stored in 'dirs.py'.

    Arguments:
        proj -- project at which the directories correspond

    The available projects proj are:
        'PRD_2020' -- runs of A. Roper Pol et al., "Numerical simulations of
                      gravitational waves from early-universe turbulence",
                      Phys. Rev. D 102, 083512 (2020)
        'PRR_2021' -- runs of T. Kahniashvili et al., "Circular polarization of
                      gravitational waves from early-universe helical
                      turbulence", Phys. Rev. Research 3, 013193 (2021)

    Returns:
        dirs -- dictionary of directories
    """

    dirs = {}

    if proj == 'PRD_2020':
        dirs.update({'ini1':'M1152e_exp6k4_M4b'})
        dirs.update({'ini2':'M1152e_exp6k4'})
        dirs.update({'ini3':'M1152e_exp6k4_k60b'})
        dirs.update({'hel1':'F1152d2_sig1_t11_M2c_double'})
        dirs.update({'hel2':'F1152a_sig1_t11d_double'})
        dirs.update({'hel3':'F1152a_sig1'})
        dirs.update({'hel4':'F1152a_k10_sig1'})
        dirs.update({'noh1':'F1152b_sig0_t11_M4'})
        dirs.update({'noh2':'F1152a_sig0_t11b'})
        dirs.update({'ac1':'E1152e_t11_M4d_double'})
        dirs.update({'ac2':'E1152e_t11_M4a_double'})
        dirs.update({'ac3':'E1152e_t11_M4e_double'})

    if proj == 'PRR_2021':
        dirs.update({'K0':'K512sig0_k6_ramp1a'})
        dirs.update({'K01_c':'K512sig01_k6_ramp1c'})
        dirs.update({'K01_a':'K512sig01_k6_ramp1a'})
        dirs.update({'K03':'K512sig03_k6_ramp1a'})
        dirs.update({'K05':'K512sig05_k6_ramp1a'})
        dirs.update({'K1':'K512sig1_k6_ramp1a'})
        dirs.update({'M0':'M512sig0_k6_ramp1a'})
        dirs.update({'M01_c':'M512sig01_k6_ramp1c'})
        dirs.update({'M01_b':'M512sig01_k6_ramp1b'})
        dirs.update({'M03':'M512sig03_k6_ramp1a'})
        dirs.update({'M05':'M512sig05_k6_ramp1a'})
        dirs.update({'M1':'M512sig1_k6_ramp1a'})
        dirs.update({'nohel_tau01':'F1152a_sig0_t11_M4_ramp01b'})
        dirs.update({'nohel_tau02':'F1152a_sig0_t11_M4_ramp02a'})
        dirs.update({'nohel_tau05':'F1152a_sig0_t11_M4_ramp05a'})
        dirs.update({'nohel_tau1':'F1152a_sig0_t11_M4_ramp1a'})
        dirs.update({'nohel_tau2':'F1152a_sig0_t11_M4_ramp2a'})

    return dirs

def add_run(s1, s2, sf):

    """
    Function that writes the directory (s2) and name (s1) of a new run in
    the 'dirs.py' file, by generating a copy of dirs.py in 'sf'
    """

    fp2 = open(sf, 'w')
    with open('dirs.py') as fp:
        line = fp.readline()
        fp2.write(line)
        i = 0
        while line:
            line = fp.readline()
            fp2.write(line)
            content = line.split()
            if content:
                if content[0] == 'def':
                    if content[1] == 'read_dirs():':
                        fp2.write(fp.readline())
                        fp2.write(fp.readline())
                        fp2.write('    dirs.update({\'%s'%s1)
                        fp2.write('\':\'%s\'})'%s2)
                        fp2.write('\n')
