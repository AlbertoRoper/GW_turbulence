"""
dirs.py is a Python routine that contains a function to create a dictionary
between the identifying names of runs in the literature with the corresponding
names of their directories, which should be included in the same directory.
The runs correspond to Pencil Code simulations of gravitational waves
generated by MHD turbulence in the early universe.
"""

def read_dirs(proj, dirs={}):

    """
    Function that returns the dictionary of directories stored in 'dirs.py'.

    Arguments:
        proj -- project at which the directories correspond
        dirs -- initial directory with the runs of the projects
                (default is empty directory)

    The available projects proj are:

        'PRD_2020' -- runs of A. Roper Pol et al., "Numerical simulations
                      of gravitational waves from early-universe turbulence",
                      Phys. Rev. D 102, 083512 (2020), arXiv:1903.08585.

                      The options are: 'PRD_2020_ini', 'PRD_2020_hel',
                          'PRD_2020_noh', and 'PRD_2020_ac' for the different
                          types of runs

        'PRR_2021' -- runs of T. Kahniashvili et al., "Circular polarization of
                      gravitational waves from early-universe helical
                      turbulence", Phys. Rev. Research 3, 013193 (2021),
                      arxiv:2011.05556.

                      The options are: 'PRR_2021_K', 'PRR_2021_M', and
                          'PRR_2021_nohel', for the different types of runs

        'JCAP_2021' -- runs of A. Roper Pol et al., "Polarization of
                       gravitational waves from helical MHD turbulent sources",
                       arXiv:2107.05356.

                       The options are: 'JCAP_2021_ini' and 'JCAP_2021_dri'
                           for the initially given (ini) or driven (dri)
                           fields.

    Returns:
        dirs -- updated dictionary of directories
    """

    if proj == 'PRD_2020_ini':
        dirs.update({'ini1':'M1152e_exp6k4_M4b'})
        dirs.update({'ini2':'M1152e_exp6k4'})
        dirs.update({'ini3':'M1152e_exp6k4_k60b'})
    if proj == 'PRD_2020_hel':
        dirs.update({'hel1':'F1152d2_sig1_t11_M2c_double'})
        dirs.update({'hel2':'F1152a_sig1_t11d_double'})
        dirs.update({'hel3':'F1152a_sig1'})
        dirs.update({'hel4':'F1152a_k10_sig1'})
    if proj == 'PRD_2020_noh':
        dirs.update({'noh1':'F1152b_sig0_t11_M4'})
        dirs.update({'noh2':'F1152a_sig0_t11b'})
    if proj == 'PRD_2020_ac':
        dirs.update({'ac1':'E1152e_t11_M4d_double'})
        dirs.update({'ac2':'E1152e_t11_M4a_double'})
        dirs.update({'ac3':'E1152e_t11_M4e_double'})

    if proj == 'PRR_2021_K':
        dirs.update({'K0':'K512sig0_k6_ramp1a'})
        dirs.update({'K01_c':'K512sig01_k6_ramp1c'})
        dirs.update({'K01_a':'K512sig01_k6_ramp1a'})
        dirs.update({'K03':'K512sig03_k6_ramp1a'})
        dirs.update({'K05':'K512sig05_k6_ramp1a'})
        dirs.update({'K1':'K512sig1_k6_ramp1a'})
    if proj == 'PRR_2021_M':
        dirs.update({'M0':'M512sig0_k6_ramp1a'})
        dirs.update({'M01_c':'M512sig01_k6_ramp1c'})
        dirs.update({'M01_b':'M512sig01_k6_ramp1b'})
        dirs.update({'M03':'M512sig03_k6_ramp1a'})
        dirs.update({'M05':'M512sig05_k6_ramp1a'})
        dirs.update({'M1':'M512sig1_k6_ramp1a'})
    if proj == 'PRR_2021_nohel':
        dirs.update({'nohel_tau01':'F1152a_sig0_t11_M4_ramp01b'})
        dirs.update({'nohel_tau02':'F1152a_sig0_t11_M4_ramp02a'})
        dirs.update({'nohel_tau05':'F1152a_sig0_t11_M4_ramp05a'})
        dirs.update({'nohel_tau1':'F1152a_sig0_t11_M4_ramp1a'})
        dirs.update({'nohel_tau2':'F1152a_sig0_t11_M4_ramp2a'})

    if proj == 'JCAP_2021_ini':
        dirs.update({'i_s01':'M1152e_exp6k4_sig01'})
        dirs.update({'i_s03':'M1152e_exp6k4_sig03'})
        dirs.update({'i_s05':'M1152e_exp6k4_sig05'})
        dirs.update({'i_s07':'M1152e_exp6k4_sig07'})
        dirs.update({'i_s1':'M1152e_exp6k4'})
    if proj == 'JCAP_2021_dri':
        dirs.update({'f_s001_neg':'F1152sigm001a'})
        dirs.update({'f_s001':'F1152sig001a'})
        dirs.update({'f_s03':'F1152sig03a'})
        dirs.update({'f_s05':'F1152sig05a'})
        dirs.update({'f_s07':'F1152sig07c'})
        dirs.update({'f_s1_neg':'F1152sigm1a'})

    return dirs
